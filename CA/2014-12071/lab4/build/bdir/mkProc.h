/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Sat May  5 22:30:38 KST 2018
 * 
 */

/* Generation options: */
#ifndef __mkProc_h__
#define __mkProc_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkCop.h"
#include "mkDMemory.h"
#include "mkIMemory.h"
#include "mkRFile.h"


/* Class declaration for the mkProc module */
class MOD_mkProc : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_condFlag;
  MOD_mkCop INST_cop;
  MOD_mkDMemory INST_dMem;
  MOD_Reg<tUWide> INST_e2mw;
  MOD_Reg<tUWide> INST_f2e;
  MOD_mkIMemory INST_iMem;
  MOD_Reg<tUInt64> INST_pc;
  MOD_mkRFile INST_rf;
  MOD_Reg<tUInt8> INST_stage;
  MOD_Reg<tUInt8> INST_stat;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_data_0_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_data_0_rl;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_deqP_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_deqP_rl;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2_0;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_0_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_0_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_1_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_1_1;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_lat_0;
  MOD_Wire<tUInt8> INST_statRedirect_enqP_lat_1;
  MOD_Reg<tUInt8> INST_statRedirect_enqP_rl;
 
 /* Constructor */
 public:
  MOD_mkProc(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_cpuToHost;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_cop_started____d22;
  tUInt8 DEF_upd__h6216;
  tUInt8 DEF_upd__h13237;
  tUInt8 DEF_upd__h13295;
  tUInt8 DEF_statRedirect_deqP_dummy2_1__h6336;
  tUInt8 DEF_statRedirect_deqP_dummy2_0__h6323;
  tUInt8 DEF_statRedirect_enqP_dummy2_1__h13263;
  tUInt8 DEF_statRedirect_enqP_dummy2_0__h6142;
  tUInt8 DEF_y__h6369;
  tUInt8 DEF_x__h6368;
  tUInt8 DEF_IF_statRedirect_enqP_lat_0_whas__0_THEN_statRe_ETC___d13;
 
 /* Local definitions */
 private:
  tUWide DEF_e2mw___d597;
  tUWide DEF_f2e__h9505;
  tUWide DEF_iMem_req_pc_9___d30;
  tUInt64 DEF_pc__h6788;
  tUInt8 DEF_statRedirect_data_0_rl__h1678;
  tUWide DEF_e2mw_97_BITS_262_TO_130___d673;
  tUWide DEF_e2mw_97_BITS_193_TO_66___d615;
  tUInt64 DEF_e2mw_97_BITS_521_TO_458___d659;
  tUInt64 DEF_x__h12412;
  tUInt64 DEF_x__h12497;
  tUInt8 DEF_e2mw_97_BITS_533_TO_529___d652;
  tUInt8 DEF_e2mw_97_BIT_534___d651;
  tUInt8 DEF_e2mw_97_BIT_528___d655;
  tUInt8 DEF_e2mw_97_BIT_522___d658;
  tUInt8 DEF_e2mw_97_BIT_327___d666;
  tUInt8 DEF_e2mw_97_BIT_129___d674;
  tUWide DEF_IF_e2mw_97_BITS_538_TO_535_98_EQ_4_99_OR_e2mw__ETC___d635;
  tUWide DEF_e2mw_97_BITS_193_TO_130_16_CONCAT_IF_e2mw_97_B_ETC___d634;
  tUInt64 DEF_IF_e2mw_97_BIT_522_58_THEN_e2mw_97_BITS_521_TO_ETC___d660;
  tUInt8 DEF_IF_statRedirect_data_0_lat_0_whas_THEN_statRed_ETC___d6;
  tUWide DEF_e2mw_97_BITS_538_TO_535_98_CONCAT_e2mw_97_BIT__ETC___d691;
  tUInt8 DEF_e2mw_97_BIT_534_51_CONCAT_IF_e2mw_97_BIT_534_5_ETC___d654;
  tUWide DEF_e2mw_97_BIT_528_55_CONCAT_IF_e2mw_97_BIT_528_5_ETC___d690;
  tUWide DEF_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2e_72_ETC___d594;
  tUWide DEF_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2e_72_ETC___d593;
  tUWide DEF_NOT_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2_ETC___d564;
  tUWide DEF_NOT_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_22_AND_N_ETC___d592;
  tUWide DEF_e2mw_97_BIT_522_58_CONCAT_IF_e2mw_97_BIT_522_5_ETC___d661;
  tUWide DEF_e2mw_97_BIT_457_18_CONCAT_IF_e2mw_97_BIT_457_1_ETC___d689;
  tUWide DEF_e2mw_97_BIT_392_62_CONCAT_IF_e2mw_97_BIT_392_6_ETC___d665;
  tUWide DEF_e2mw_97_BITS_538_TO_535_98_EQ_4_99_OR_e2mw_97__ETC___d688;
  tUWide DEF_NOT_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_22_AND_N_ETC___d565;
  tUWide DEF_DONTCARE_CONCAT_IF_f2e_72_BITS_79_TO_76_73_EQ__ETC___d591;
  tUWide DEF_IF_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2e_ETC___d590;
  tUWide DEF_IF_e2mw_97_BITS_538_TO_535_98_EQ_4_99_OR_e2mw__ETC___d687;
  tUWide DEF_IF_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2e_ETC___d589;
  tUWide DEF_IF_IF_f2e_72_BITS_79_TO_76_73_EQ_0b0_74_OR_f2e_ETC___d588;
  tUWide DEF_NOT_e2mw_97_BITS_538_TO_535_98_EQ_4_99_10_AND__ETC___d636;
 
 /* Rules */
 public:
  void RL_statRedirect_data_0_canon();
  void RL_statRedirect_enqP_canon();
  void RL_statRedirect_deqP_canon();
  void RL_doFetch();
  void RL_doExecute();
  void RL_doMemory();
  void RL_doWriteBack();
  void RL_upd_Stat();
  void RL_statHLT();
  void RL_statINS();
 
 /* Methods */
 public:
  tUWide METH_cpuToHost();
  tUInt8 METH_RDY_cpuToHost();
  void METH_hostToCpu(tUInt64 ARG_hostToCpu_startpc);
  tUInt8 METH_RDY_hostToCpu();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkProc &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkProc &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
};

#endif /* ifndef __mkProc_h__ */
