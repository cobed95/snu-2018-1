/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue Apr  3 15:42:19 KST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbRightArithmeticPipelined.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_2("FAILED %d correct values out of %d", 34u);
static std::string const __str_literal_3("FAILED Right Arithmetic Shift %b >> %d gave %b instead of %b",
					 60u);
static std::string const __str_literal_1("PASSED", 6u);


/* Constructor */
MOD_mkTbRightArithmeticPipelined::MOD_mkTbRightArithmeticPipelined(tSimStateHdl simHdl,
								   char const *name,
								   Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_bsrap_bsrp_fifo0(simHdl, "bsrap_bsrp_fifo0", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo1(simHdl, "bsrap_bsrp_fifo1", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo2(simHdl, "bsrap_bsrp_fifo2", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo3(simHdl, "bsrap_bsrp_fifo3", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_fifo4(simHdl, "bsrap_bsrp_fifo4", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_inFifo(simHdl, "bsrap_bsrp_inFifo", this, 71u, 2u, 1u, 0u),
    INST_bsrap_bsrp_outFifo(simHdl, "bsrap_bsrp_outFifo", this, 64u, 2u, 1u, 0u),
    INST_correct(simHdl, "correct", this, 32u, 0u, (tUInt8)0u),
    INST_input_cycle(simHdl, "input_cycle", this, 32u, 0u, (tUInt8)0u),
    INST_output_cycle(simHdl, "output_cycle", this, 32u, 0u, (tUInt8)0u),
    INST_randomShift_init(simHdl, "randomShift_init", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_randomVal_init(simHdl, "randomVal_init", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_valFifo(simHdl, "valFifo", this, 70u, 10u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF_ab__h46709(71u),
    DEF_ab__h38105(71u),
    DEF_ab__h29250(71u),
    DEF_ab__h20271(71u),
    DEF_ab__h11230(71u),
    DEF_ab__h2149(71u),
    DEF_x__h54253(12297829382473034410llu),
    DEF_TASK_getRandom___d98(12297829382473034410llu),
    DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101(70u),
    DEF_ab__h54686(70u),
    DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67(71u),
    DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51(71u),
    DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37(71u),
    DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12(71u),
    DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24(71u),
    DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103(71u)
{
  symbol_count = 25u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbRightArithmeticPipelined::init_symbols_0()
{
  init_symbol(&symbols[0u], "bsrap_bsrp_fifo0", SYM_MODULE, &INST_bsrap_bsrp_fifo0);
  init_symbol(&symbols[1u], "bsrap_bsrp_fifo1", SYM_MODULE, &INST_bsrap_bsrp_fifo1);
  init_symbol(&symbols[2u], "bsrap_bsrp_fifo2", SYM_MODULE, &INST_bsrap_bsrp_fifo2);
  init_symbol(&symbols[3u], "bsrap_bsrp_fifo3", SYM_MODULE, &INST_bsrap_bsrp_fifo3);
  init_symbol(&symbols[4u], "bsrap_bsrp_fifo4", SYM_MODULE, &INST_bsrap_bsrp_fifo4);
  init_symbol(&symbols[5u], "bsrap_bsrp_inFifo", SYM_MODULE, &INST_bsrap_bsrp_inFifo);
  init_symbol(&symbols[6u], "bsrap_bsrp_outFifo", SYM_MODULE, &INST_bsrap_bsrp_outFifo);
  init_symbol(&symbols[7u], "correct", SYM_MODULE, &INST_correct);
  init_symbol(&symbols[8u], "input_cycle", SYM_MODULE, &INST_input_cycle);
  init_symbol(&symbols[9u], "output_cycle", SYM_MODULE, &INST_output_cycle);
  init_symbol(&symbols[10u], "RL_bsrap_bsrp_shift0", SYM_RULE);
  init_symbol(&symbols[11u], "RL_bsrap_bsrp_shift1", SYM_RULE);
  init_symbol(&symbols[12u], "RL_bsrap_bsrp_shift2", SYM_RULE);
  init_symbol(&symbols[13u], "RL_bsrap_bsrp_shift3", SYM_RULE);
  init_symbol(&symbols[14u], "RL_bsrap_bsrp_shift4", SYM_RULE);
  init_symbol(&symbols[15u], "RL_bsrap_bsrp_shift5", SYM_RULE);
  init_symbol(&symbols[16u], "RL_randomShift_initialize", SYM_RULE);
  init_symbol(&symbols[17u], "RL_randomVal_initialize", SYM_RULE);
  init_symbol(&symbols[18u], "RL_test_request", SYM_RULE);
  init_symbol(&symbols[19u], "RL_test_response", SYM_RULE);
  init_symbol(&symbols[20u], "randomShift_init", SYM_MODULE, &INST_randomShift_init);
  init_symbol(&symbols[21u], "randomVal_init", SYM_MODULE, &INST_randomVal_init);
  init_symbol(&symbols[22u], "valFifo", SYM_MODULE, &INST_valFifo);
  init_symbol(&symbols[23u], "x__h54519", SYM_DEF, &DEF_x__h54519, 32u);
  init_symbol(&symbols[24u], "x__h54906", SYM_DEF, &DEF_x__h54906, 32u);
}


/* Rule actions */

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift0()
{
  tUInt64 DEF_x__h725;
  tUInt8 DEF_ab_BIT_0___h9732;
  tUInt64 DEF_ab_BITS_70_TO_7__BITS_63_TO_1___h2287;
  DEF_ab__h2149 = INST_bsrap_bsrp_inFifo.METH_first();
  DEF_ab_BITS_70_TO_7__BITS_63_TO_1___h2287 = primExtract64(63u,
							    71u,
							    DEF_ab__h2149,
							    32u,
							    70u,
							    32u,
							    8u);
  DEF_ab_BIT_0___h9732 = DEF_ab__h2149.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h725 = DEF_ab__h2149.get_bits_in_word8(0u,
						1u,
						1u) ? (((tUInt64)(DEF_ab_BIT_0___h9732)) << 63u) | DEF_ab_BITS_70_TO_7__BITS_63_TO_1___h2287 : primExtract64(64u,
																			     71u,
																			     DEF_ab__h2149,
																			     32u,
																			     70u,
																			     32u,
																			     7u);
  DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12.set_bits_in_word((tUInt8)(DEF_x__h725 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h725 >> 25u),
												   1u).set_whole_word((((tUInt32)(33554431u & DEF_x__h725)) << 7u) | (tUInt32)(DEF_ab__h2149.get_bits_in_word8(0u,
																									       0u,
																									       7u)),
														      0u);
  INST_bsrap_bsrp_inFifo.METH_deq();
  INST_bsrap_bsrp_fifo0.METH_enq(DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12);
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift1()
{
  tUInt64 DEF_x__h9815;
  tUInt8 DEF_ab_BIT_0___h18685;
  DEF_ab__h11230 = INST_bsrap_bsrp_fifo0.METH_first();
  DEF_ab_BIT_0___h18685 = DEF_ab__h11230.get_bits_in_word8(0u, 0u, 1u);
  DEF_x__h9815 = DEF_ab__h11230.get_bits_in_word8(0u,
						  2u,
						  1u) ? ((((tUInt64)(DEF_ab_BIT_0___h18685)) << 63u) | (((tUInt64)(DEF_ab_BIT_0___h18685)) << 62u)) | primExtract64(62u,
																				    71u,
																				    DEF_ab__h11230,
																				    32u,
																				    70u,
																				    32u,
																				    9u) : primExtract64(64u,
																							71u,
																							DEF_ab__h11230,
																							32u,
																							70u,
																							32u,
																							7u);
  DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24.set_bits_in_word((tUInt8)(DEF_x__h9815 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h9815 >> 25u),
												   1u).set_whole_word((((tUInt32)(33554431u & DEF_x__h9815)) << 7u) | (tUInt32)(DEF_ab__h11230.get_bits_in_word8(0u,
																										 0u,
																										 7u)),
														      0u);
  INST_bsrap_bsrp_fifo0.METH_deq();
  INST_bsrap_bsrp_fifo1.METH_enq(DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24);
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift2()
{
  tUInt8 DEF_bsrap_bsrp_fifo1_first__8_BIT_0_0_CONCAT_bsrap_ETC___d31;
  tUInt64 DEF_x__h18858;
  tUInt8 DEF_ab_BIT_0___h27488;
  DEF_ab__h20271 = INST_bsrap_bsrp_fifo1.METH_first();
  DEF_ab_BIT_0___h27488 = DEF_ab__h20271.get_bits_in_word8(0u, 0u, 1u);
  DEF_bsrap_bsrp_fifo1_first__8_BIT_0_0_CONCAT_bsrap_ETC___d31 = (tUInt8)3u & ((DEF_ab_BIT_0___h27488 << 1u) | DEF_ab_BIT_0___h27488);
  DEF_x__h18858 = DEF_ab__h20271.get_bits_in_word8(0u,
						   3u,
						   1u) ? ((((tUInt64)(DEF_bsrap_bsrp_fifo1_first__8_BIT_0_0_CONCAT_bsrap_ETC___d31)) << 62u) | (((tUInt64)(DEF_bsrap_bsrp_fifo1_first__8_BIT_0_0_CONCAT_bsrap_ETC___d31)) << 60u)) | primExtract64(60u,
																														   71u,
																														   DEF_ab__h20271,
																														   32u,
																														   70u,
																														   32u,
																														   11u) : primExtract64(64u,
																																	71u,
																																	DEF_ab__h20271,
																																	32u,
																																	70u,
																																	32u,
																																	7u);
  DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37.set_bits_in_word((tUInt8)(DEF_x__h18858 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h18858 >> 25u),
												   1u).set_whole_word((((tUInt32)(33554431u & DEF_x__h18858)) << 7u) | (tUInt32)(DEF_ab__h20271.get_bits_in_word8(0u,
																										  0u,
																										  7u)),
														      0u);
  INST_bsrap_bsrp_fifo1.METH_deq();
  INST_bsrap_bsrp_fifo2.METH_enq(DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37);
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift3()
{
  tUInt8 DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44;
  tUInt64 DEF_x__h27841;
  tUInt8 DEF_ab_BIT_0___h35991;
  DEF_ab__h29250 = INST_bsrap_bsrp_fifo2.METH_first();
  DEF_ab_BIT_0___h35991 = DEF_ab__h29250.get_bits_in_word8(0u, 0u, 1u);
  DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44 = (tUInt8)3u & ((DEF_ab_BIT_0___h35991 << 1u) | DEF_ab_BIT_0___h35991);
  DEF_x__h27841 = DEF_ab__h29250.get_bits_in_word8(0u,
						   4u,
						   1u) ? ((((((tUInt64)(DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44)) << 62u) | (((tUInt64)(DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44)) << 60u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44)) << 58u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo2_first__1_BIT_0_3_CONCAT_bsrap_ETC___d44)) << 56u)) | primExtract64(56u,
																																																				 71u,
																																																				 DEF_ab__h29250,
																																																				 32u,
																																																				 70u,
																																																				 32u,
																																																				 15u) : primExtract64(64u,
																																																						      71u,
																																																						      DEF_ab__h29250,
																																																						      32u,
																																																						      70u,
																																																						      32u,
																																																						      7u);
  DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51.set_bits_in_word((tUInt8)(DEF_x__h27841 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h27841 >> 25u),
												   1u).set_whole_word((((tUInt32)(33554431u & DEF_x__h27841)) << 7u) | (tUInt32)(DEF_ab__h29250.get_bits_in_word8(0u,
																										  0u,
																										  7u)),
														      0u);
  INST_bsrap_bsrp_fifo2.METH_deq();
  INST_bsrap_bsrp_fifo3.METH_enq(DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51);
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift4()
{
  tUInt8 DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58;
  tUInt64 DEF_x__h36704;
  tUInt8 DEF_ab_BIT_0___h43894;
  DEF_ab__h38105 = INST_bsrap_bsrp_fifo3.METH_first();
  DEF_ab_BIT_0___h43894 = DEF_ab__h38105.get_bits_in_word8(0u, 0u, 1u);
  DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58 = (tUInt8)3u & ((DEF_ab_BIT_0___h43894 << 1u) | DEF_ab_BIT_0___h43894);
  DEF_x__h36704 = DEF_ab__h38105.get_bits_in_word8(0u,
						   5u,
						   1u) ? ((((((((((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 62u) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 60u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 58u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 56u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 54u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 52u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 50u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo3_first__5_BIT_0_7_CONCAT_bsrap_ETC___d58)) << 48u)) | primExtract64(48u,
																																																																																															     71u,
																																																																																															     DEF_ab__h38105,
																																																																																															     32u,
																																																																																															     70u,
																																																																																															     32u,
																																																																																															     23u) : primExtract64(64u,
																																																																																																		  71u,
																																																																																																		  DEF_ab__h38105,
																																																																																																		  32u,
																																																																																																		  70u,
																																																																																																		  32u,
																																																																																																		  7u);
  DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67.set_bits_in_word((tUInt8)(DEF_x__h36704 >> 57u),
										2u,
										0u,
										7u).set_whole_word((tUInt32)(DEF_x__h36704 >> 25u),
												   1u).set_whole_word((((tUInt32)(33554431u & DEF_x__h36704)) << 7u) | (tUInt32)(DEF_ab__h38105.get_bits_in_word8(0u,
																										  0u,
																										  7u)),
														      0u);
  INST_bsrap_bsrp_fifo3.METH_deq();
  INST_bsrap_bsrp_fifo4.METH_enq(DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67);
}

void MOD_mkTbRightArithmeticPipelined::RL_bsrap_bsrp_shift5()
{
  tUInt8 DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74;
  tUInt64 DEF_x__h45319;
  tUInt8 DEF_ab_BIT_0___h50594;
  DEF_ab__h46709 = INST_bsrap_bsrp_fifo4.METH_first();
  DEF_ab_BIT_0___h50594 = DEF_ab__h46709.get_bits_in_word8(0u, 0u, 1u);
  DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74 = (tUInt8)3u & ((DEF_ab_BIT_0___h50594 << 1u) | DEF_ab_BIT_0___h50594);
  DEF_x__h45319 = DEF_ab__h46709.get_bits_in_word8(0u,
						   6u,
						   1u) ? ((((((((((((((((((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 62u) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 60u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 58u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 56u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 54u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 52u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 50u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 48u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 46u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 44u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 42u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 40u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 38u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 36u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 34u)) | (((tUInt64)(DEF_bsrap_bsrp_fifo4_first__1_BIT_0_3_CONCAT_bsrap_ETC___d74)) << 32u)) | (tUInt64)(primExtract32(32u,
																																																																																																																																																																																							       71u,
																																																																																																																																																																																							       DEF_ab__h46709,
																																																																																																																																																																																							       32u,
																																																																																																																																																																																							       70u,
																																																																																																																																																																																							       32u,
																																																																																																																																																																																							       39u)) : primExtract64(64u,
																																																																																																																																																																																										     71u,
																																																																																																																																																																																										     DEF_ab__h46709,
																																																																																																																																																																																										     32u,
																																																																																																																																																																																										     70u,
																																																																																																																																																																																										     32u,
																																																																																																																																																																																										     7u);
  INST_bsrap_bsrp_fifo4.METH_deq();
  INST_bsrap_bsrp_outFifo.METH_enq(DEF_x__h45319);
}

void MOD_mkTbRightArithmeticPipelined::RL_randomVal_initialize()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    setSeed(3735928559llu);
  INST_randomVal_init.METH_write((tUInt8)1u);
}

void MOD_mkTbRightArithmeticPipelined::RL_randomShift_initialize()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    setSeed(3405691582llu);
  INST_randomShift_init.METH_write((tUInt8)1u);
}

void MOD_mkTbRightArithmeticPipelined::RL_test_request()
{
  tUInt32 DEF_x__h54500;
  tUInt8 DEF_x__h54466;
  tUInt8 DEF_x__h54425;
  DEF_x__h54519 = INST_input_cycle.METH_read();
  DEF_x__h54500 = DEF_x__h54519 + 1u;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_TASK_getRandom___d98 = getRandom();
  DEF_x__h54466 = (tUInt8)(DEF_TASK_getRandom___d98 >> 63u);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_x__h54253 = getRandom();
  DEF_x__h54425 = (tUInt8)((tUInt8)63u & DEF_x__h54253);
  DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101.set_bits_in_word((tUInt8)(DEF_TASK_getRandom___d98 >> 58u),
										 2u,
										 0u,
										 6u).set_whole_word((tUInt32)(DEF_TASK_getRandom___d98 >> 26u),
												    1u).set_whole_word((((tUInt32)(67108863u & DEF_TASK_getRandom___d98)) << 6u) | (tUInt32)(DEF_x__h54425),
														       0u);
  DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103.set_bits_in_word((tUInt8)(DEF_TASK_getRandom___d98 >> 57u),
										 2u,
										 0u,
										 7u).set_whole_word((tUInt32)(DEF_TASK_getRandom___d98 >> 25u),
												    1u).set_whole_word(((((tUInt32)(33554431u & DEF_TASK_getRandom___d98)) << 7u) | (((tUInt32)(DEF_x__h54425)) << 1u)) | (tUInt32)(DEF_x__h54466),
														       0u);
  INST_valFifo.METH_enq(DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101);
  INST_bsrap_bsrp_inFifo.METH_enq(DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103);
  INST_input_cycle.METH_write(DEF_x__h54500);
}

void MOD_mkTbRightArithmeticPipelined::RL_test_response()
{
  tUInt32 DEF_x__h54902;
  tUInt32 DEF_x__h54754;
  tUInt8 DEF_output_cycle_05_EQ_128_06_AND_correct_11_EQ_12_ETC___d113;
  tUInt8 DEF_output_cycle_05_EQ_128_06_AND_NOT_correct_11_E_ETC___d115;
  tUInt8 DEF_NOT_output_cycle_05_EQ_128_06_16_AND_bsrap_bsr_ETC___d123;
  tUInt8 DEF_NOT_output_cycle_05_EQ_128_06___d116;
  tUInt8 DEF_NOT_output_cycle_05_EQ_128_06_16_AND_NOT_bsrap_ETC___d126;
  tUInt8 DEF_correct_11_EQ_128___d112;
  tUInt64 DEF_trueResult__h54670;
  tUInt8 DEF_valFifo_first__18_BITS_5_TO_0___d120;
  tUInt64 DEF_val__h54667;
  tUInt64 DEF_v__h54594;
  tUInt32 DEF_x__h54764;
  tUInt8 DEF_bsrap_bsrp_outFifo_first__17_EQ_valFifo_first__ETC___d122;
  DEF_x__h54906 = INST_output_cycle.METH_read();
  DEF_x__h54764 = INST_correct.METH_read();
  DEF_ab__h54686 = INST_valFifo.METH_first();
  DEF_v__h54594 = INST_bsrap_bsrp_outFifo.METH_first();
  DEF_val__h54667 = primExtract64(64u, 70u, DEF_ab__h54686, 32u, 69u, 32u, 6u);
  DEF_valFifo_first__18_BITS_5_TO_0___d120 = DEF_ab__h54686.get_bits_in_word8(0u, 0u, 6u);
  DEF_trueResult__h54670 = primShiftRA64(64u,
					 64u,
					 (tUInt64)(DEF_val__h54667),
					 6u,
					 (tUInt8)(DEF_valFifo_first__18_BITS_5_TO_0___d120));
  DEF_bsrap_bsrp_outFifo_first__17_EQ_valFifo_first__ETC___d122 = DEF_v__h54594 == DEF_trueResult__h54670;
  DEF_correct_11_EQ_128___d112 = DEF_x__h54764 == 128u;
  DEF_output_cycle_05_EQ_128___d106 = DEF_x__h54906 == 128u;
  DEF_NOT_output_cycle_05_EQ_128_06___d116 = !DEF_output_cycle_05_EQ_128___d106;
  DEF_NOT_output_cycle_05_EQ_128_06_16_AND_NOT_bsrap_ETC___d126 = DEF_NOT_output_cycle_05_EQ_128_06___d116 && !DEF_bsrap_bsrp_outFifo_first__17_EQ_valFifo_first__ETC___d122;
  DEF_NOT_output_cycle_05_EQ_128_06_16_AND_bsrap_bsr_ETC___d123 = DEF_NOT_output_cycle_05_EQ_128_06___d116 && DEF_bsrap_bsrp_outFifo_first__17_EQ_valFifo_first__ETC___d122;
  DEF_output_cycle_05_EQ_128_06_AND_NOT_correct_11_E_ETC___d115 = DEF_output_cycle_05_EQ_128___d106 && !DEF_correct_11_EQ_128___d112;
  DEF_output_cycle_05_EQ_128_06_AND_correct_11_EQ_12_ETC___d113 = DEF_output_cycle_05_EQ_128___d106 && DEF_correct_11_EQ_128___d112;
  DEF_x__h54754 = DEF_x__h54764 + 1u;
  DEF_x__h54902 = DEF_x__h54906 + 1u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_output_cycle_05_EQ_128_06_AND_correct_11_EQ_12_ETC___d113)
      dollar_display(sim_hdl, this, "s", &__str_literal_1);
    if (DEF_output_cycle_05_EQ_128_06_AND_correct_11_EQ_12_ETC___d113)
      dollar_finish(sim_hdl, "32", 1u);
    if (DEF_output_cycle_05_EQ_128_06_AND_NOT_correct_11_E_ETC___d115)
      dollar_display(sim_hdl, this, "s,32,32", &__str_literal_2, DEF_x__h54764, DEF_x__h54906);
    if (DEF_output_cycle_05_EQ_128_06_AND_NOT_correct_11_E_ETC___d115)
      dollar_finish(sim_hdl, "32", 1u);
  }
  if (DEF_NOT_output_cycle_05_EQ_128_06___d116)
    INST_bsrap_bsrp_outFifo.METH_deq();
  if (DEF_NOT_output_cycle_05_EQ_128_06_16_AND_bsrap_bsr_ETC___d123)
    INST_correct.METH_write(DEF_x__h54754);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_output_cycle_05_EQ_128_06_16_AND_NOT_bsrap_ETC___d126)
      dollar_display(sim_hdl,
		     this,
		     "s,64,6,64,64",
		     &__str_literal_3,
		     DEF_val__h54667,
		     DEF_valFifo_first__18_BITS_5_TO_0___d120,
		     DEF_v__h54594,
		     DEF_trueResult__h54670);
    if (DEF_NOT_output_cycle_05_EQ_128_06_16_AND_NOT_bsrap_ETC___d126)
      dollar_finish(sim_hdl, "32", 1u);
  }
  if (DEF_NOT_output_cycle_05_EQ_128_06___d116)
    INST_valFifo.METH_deq();
  if (DEF_NOT_output_cycle_05_EQ_128_06___d116)
    INST_output_cycle.METH_write(DEF_x__h54902);
}


/* Methods */


/* Reset routines */

void MOD_mkTbRightArithmeticPipelined::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_valFifo.reset_RST(ARG_rst_in);
  INST_randomVal_init.reset_RST(ARG_rst_in);
  INST_randomShift_init.reset_RST(ARG_rst_in);
  INST_output_cycle.reset_RST(ARG_rst_in);
  INST_input_cycle.reset_RST(ARG_rst_in);
  INST_correct.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_outFifo.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_inFifo.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo4.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo3.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo2.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo1.reset_RST(ARG_rst_in);
  INST_bsrap_bsrp_fifo0.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbRightArithmeticPipelined::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbRightArithmeticPipelined::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_bsrap_bsrp_fifo0.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo1.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo2.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo3.dump_state(indent + 2u);
  INST_bsrap_bsrp_fifo4.dump_state(indent + 2u);
  INST_bsrap_bsrp_inFifo.dump_state(indent + 2u);
  INST_bsrap_bsrp_outFifo.dump_state(indent + 2u);
  INST_correct.dump_state(indent + 2u);
  INST_input_cycle.dump_state(indent + 2u);
  INST_output_cycle.dump_state(indent + 2u);
  INST_randomShift_init.dump_state(indent + 2u);
  INST_randomVal_init.dump_state(indent + 2u);
  INST_valFifo.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbRightArithmeticPipelined::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 33u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12", 71u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101", 70u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_getRandom___d98", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h11230", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h20271", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h2149", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h29250", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h38105", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h46709", 71u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ab__h54686", 70u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "output_cycle_05_EQ_128___d106", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h54253", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h54519", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h54906", 32u);
  num = INST_bsrap_bsrp_fifo0.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo1.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo2.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo3.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_fifo4.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_inFifo.dump_VCD_defs(num);
  num = INST_bsrap_bsrp_outFifo.dump_VCD_defs(num);
  num = INST_correct.dump_VCD_defs(num);
  num = INST_input_cycle.dump_VCD_defs(num);
  num = INST_output_cycle.dump_VCD_defs(num);
  num = INST_randomShift_init.dump_VCD_defs(num);
  num = INST_randomVal_init.dump_VCD_defs(num);
  num = INST_valFifo.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbRightArithmeticPipelined::dump_VCD(tVCDDumpType dt,
						unsigned int levels,
						MOD_mkTbRightArithmeticPipelined &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbRightArithmeticPipelined::vcd_defs(tVCDDumpType dt,
						MOD_mkTbRightArithmeticPipelined &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 70u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 71u);
    vcd_write_x(sim_hdl, num++, 70u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24) != DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24 = DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37) != DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37 = DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51) != DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51 = DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67) != DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67, 71u);
	backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67 = DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67;
      }
      ++num;
      if ((backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12) != DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12, 71u);
	backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12 = DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101) != DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101, 70u);
	backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101 = DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103) != DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103, 71u);
	backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103 = DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103;
      }
      ++num;
      if ((backing.DEF_TASK_getRandom___d98) != DEF_TASK_getRandom___d98)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_getRandom___d98, 64u);
	backing.DEF_TASK_getRandom___d98 = DEF_TASK_getRandom___d98;
      }
      ++num;
      if ((backing.DEF_ab__h11230) != DEF_ab__h11230)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h11230, 71u);
	backing.DEF_ab__h11230 = DEF_ab__h11230;
      }
      ++num;
      if ((backing.DEF_ab__h20271) != DEF_ab__h20271)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h20271, 71u);
	backing.DEF_ab__h20271 = DEF_ab__h20271;
      }
      ++num;
      if ((backing.DEF_ab__h2149) != DEF_ab__h2149)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h2149, 71u);
	backing.DEF_ab__h2149 = DEF_ab__h2149;
      }
      ++num;
      if ((backing.DEF_ab__h29250) != DEF_ab__h29250)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h29250, 71u);
	backing.DEF_ab__h29250 = DEF_ab__h29250;
      }
      ++num;
      if ((backing.DEF_ab__h38105) != DEF_ab__h38105)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h38105, 71u);
	backing.DEF_ab__h38105 = DEF_ab__h38105;
      }
      ++num;
      if ((backing.DEF_ab__h46709) != DEF_ab__h46709)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h46709, 71u);
	backing.DEF_ab__h46709 = DEF_ab__h46709;
      }
      ++num;
      if ((backing.DEF_ab__h54686) != DEF_ab__h54686)
      {
	vcd_write_val(sim_hdl, num, DEF_ab__h54686, 70u);
	backing.DEF_ab__h54686 = DEF_ab__h54686;
      }
      ++num;
      if ((backing.DEF_output_cycle_05_EQ_128___d106) != DEF_output_cycle_05_EQ_128___d106)
      {
	vcd_write_val(sim_hdl, num, DEF_output_cycle_05_EQ_128___d106, 1u);
	backing.DEF_output_cycle_05_EQ_128___d106 = DEF_output_cycle_05_EQ_128___d106;
      }
      ++num;
      if ((backing.DEF_x__h54253) != DEF_x__h54253)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h54253, 64u);
	backing.DEF_x__h54253 = DEF_x__h54253;
      }
      ++num;
      if ((backing.DEF_x__h54519) != DEF_x__h54519)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h54519, 32u);
	backing.DEF_x__h54519 = DEF_x__h54519;
      }
      ++num;
      if ((backing.DEF_x__h54906) != DEF_x__h54906)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h54906, 32u);
	backing.DEF_x__h54906 = DEF_x__h54906;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24 = DEF_IF_bsrap_bsrp_fifo0_first__6_BIT_2_7_THEN_bsra_ETC___d24;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37 = DEF_IF_bsrap_bsrp_fifo1_first__8_BIT_3_9_THEN_bsra_ETC___d37;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51 = DEF_IF_bsrap_bsrp_fifo2_first__1_BIT_4_2_THEN_bsra_ETC___d51;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67, 71u);
      backing.DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67 = DEF_IF_bsrap_bsrp_fifo3_first__5_BIT_5_6_THEN_bsra_ETC___d67;
      vcd_write_val(sim_hdl, num++, DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12, 71u);
      backing.DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12 = DEF_IF_bsrap_bsrp_inFifo_first_BIT_1_THEN_bsrap_bs_ETC___d12;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101, 70u);
      backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101 = DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d101;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103, 71u);
      backing.DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103 = DEF_TASK_getRandom_8_CONCAT_TASK_getRandom_9_BITS__ETC___d103;
      vcd_write_val(sim_hdl, num++, DEF_TASK_getRandom___d98, 64u);
      backing.DEF_TASK_getRandom___d98 = DEF_TASK_getRandom___d98;
      vcd_write_val(sim_hdl, num++, DEF_ab__h11230, 71u);
      backing.DEF_ab__h11230 = DEF_ab__h11230;
      vcd_write_val(sim_hdl, num++, DEF_ab__h20271, 71u);
      backing.DEF_ab__h20271 = DEF_ab__h20271;
      vcd_write_val(sim_hdl, num++, DEF_ab__h2149, 71u);
      backing.DEF_ab__h2149 = DEF_ab__h2149;
      vcd_write_val(sim_hdl, num++, DEF_ab__h29250, 71u);
      backing.DEF_ab__h29250 = DEF_ab__h29250;
      vcd_write_val(sim_hdl, num++, DEF_ab__h38105, 71u);
      backing.DEF_ab__h38105 = DEF_ab__h38105;
      vcd_write_val(sim_hdl, num++, DEF_ab__h46709, 71u);
      backing.DEF_ab__h46709 = DEF_ab__h46709;
      vcd_write_val(sim_hdl, num++, DEF_ab__h54686, 70u);
      backing.DEF_ab__h54686 = DEF_ab__h54686;
      vcd_write_val(sim_hdl, num++, DEF_output_cycle_05_EQ_128___d106, 1u);
      backing.DEF_output_cycle_05_EQ_128___d106 = DEF_output_cycle_05_EQ_128___d106;
      vcd_write_val(sim_hdl, num++, DEF_x__h54253, 64u);
      backing.DEF_x__h54253 = DEF_x__h54253;
      vcd_write_val(sim_hdl, num++, DEF_x__h54519, 32u);
      backing.DEF_x__h54519 = DEF_x__h54519;
      vcd_write_val(sim_hdl, num++, DEF_x__h54906, 32u);
      backing.DEF_x__h54906 = DEF_x__h54906;
    }
}

void MOD_mkTbRightArithmeticPipelined::vcd_prims(tVCDDumpType dt,
						 MOD_mkTbRightArithmeticPipelined &backing)
{
  INST_bsrap_bsrp_fifo0.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo0);
  INST_bsrap_bsrp_fifo1.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo1);
  INST_bsrap_bsrp_fifo2.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo2);
  INST_bsrap_bsrp_fifo3.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo3);
  INST_bsrap_bsrp_fifo4.dump_VCD(dt, backing.INST_bsrap_bsrp_fifo4);
  INST_bsrap_bsrp_inFifo.dump_VCD(dt, backing.INST_bsrap_bsrp_inFifo);
  INST_bsrap_bsrp_outFifo.dump_VCD(dt, backing.INST_bsrap_bsrp_outFifo);
  INST_correct.dump_VCD(dt, backing.INST_correct);
  INST_input_cycle.dump_VCD(dt, backing.INST_input_cycle);
  INST_output_cycle.dump_VCD(dt, backing.INST_output_cycle);
  INST_randomShift_init.dump_VCD(dt, backing.INST_randomShift_init);
  INST_randomVal_init.dump_VCD(dt, backing.INST_randomVal_init);
  INST_valFifo.dump_VCD(dt, backing.INST_valFifo);
}
